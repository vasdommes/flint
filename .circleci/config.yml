# Config for CircleCI
# See https://circleci.com/docs/configuration-reference
#
# This config has a single workflow, 'build-deploy', which goes as follows:
# 1. 'build-linux-amd64': Builds Docker image from FLINT sources (using ./Dockerfile) for AMD64 platform and run tests
# 2. 'build-linux-arm64': same for ARM64
# 3. 'deploy-main': On each 'docker-main' branch update, build a multiplatform image (working for both AMD64 and ARM64)
#     and push it to DockerHub as '${DOCKER_USERNAME}/flint:main', e.g. 'vasdommes/flint:main'
# 4. 'deploy-tag': If new tag is pushed to the repo,
#     build and push the multiplatform image '${DOCKER_USERNAME}/flint:${TAG}', e.g. 'vasdommes/flint:3.1.1'
#
# Deploy works only if you specify DOCKER_USERNAME and DOCKER_PASSWORD environment variables for the CircleCI project
# See instructions here:
# https://docs.docker.com/docker-hub/access-tokens/#create-an-access-token
# https://circleci.com/docs/set-environment-variable/#set-an-environment-variable-in-a-project

version: 2.1

# Reusable commands
# See https://circleci.com/docs/reusing-config/
commands:

  docker-build:
    description: Build Docker image for platform
    parameters:
      # linux/amd64, linux/arm64
      # Run 'docker buildx ls' to see all available platforms
      platform:
        type: string
      # Docker image tag, e.g. tag=amd64 -> image flint:amd64, flint-test:amd64
      # We cannot use platform name as a tag because it contains slashes
      tag:
        type: string
    steps:
      - checkout
      - run: uname -m
      - run:
          name: Docker build flint
          command: |
            docker build . --platform << parameters.platform >> --tag flint:<< parameters.tag >> 
      - run:
          name: Save images to workspace
          command: |
            mkdir -p images/<< parameters.platform >>
            docker image save -o "images/<< parameters.platform >>/flint" flint:<< parameters.tag >>
      - persist_to_workspace:
          root: .
          paths:
            - images

  docker-load:
    description: Load docker image created via docker-build step
    parameters:
      platform:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run: docker image load < "images/<< parameters.platform >>/flint"

  docker-build-push-multiplatform:
    description: Build and push flint image for linux/amd64 and linux/arm64 platforms
    parameters:
      full-name:
        type: string
    steps:
      # AMD64
      - docker-load:
          platform: linux/amd64
      - run: |
          docker tag flint:amd64 << parameters.full-name >>-amd64
      # ARM64
      - docker-load:
          platform: linux/arm64
      - run: |
          docker tag flint:arm64 << parameters.full-name >>-arm64
      # Combine into multiplatform
      - run:
          name: Build and push multiplatform Docker image
          command: |
            echo << parameters.full-name >>
            docker login --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}
            export NAME_AMD64=<< parameters.full-name >>-amd64
            export NAME_ARM64=<< parameters.full-name >>-arm64
            export NAME_MULTI=<< parameters.full-name >>
            docker tag flint:amd64 ${NAME_AMD64}
            docker tag flint:arm64 ${NAME_ARM64}
            docker push ${NAME_AMD64}
            docker push ${NAME_ARM64}
            docker manifest create ${NAME_MULTI} --amend ${NAME_AMD64} --amend ${NAME_ARM64}
            docker manifest push ${NAME_MULTI}
      - run: docker run << parameters.full-name >> uname -m
      # TODO add some tests? Currently tests are run only in Dockerfile

  docker-deploy:
    description: Push flint image to DockerHub
    parameters:
      tag:
        type: string
    steps:
      # Do not deploy anything for forked PRs
      # (i.e. PR from someuser/flint/main to upstream/flint/main shouldn't trigger 'deploy-main' job and docker-push to upstream/flint:main)
      # https://circleci.com/docs/configuration-reference/#ending-a-job-from-within-a-step
      # https://circleci.com/docs/variables/#built-in-environment-variables
      - run: |
          if [ -n "$CIRCLE_PR_NUMBER" ]; then
            echo "Deploy for forked PRs is disabled"
            circleci-agent step halt 
          fi
      - docker-build-push-multiplatform:
          full-name: ${DOCKER_USERNAME}/flint:<< parameters.tag >>


# Jobs to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:

  build-linux-amd64:
    machine:
      image: ubuntu-2004:current
    resource_class: large
    steps:
      - docker-build:
          platform: linux/amd64
          tag: amd64

  build-linux-arm64:
    machine:
      image: ubuntu-2004:current
    resource_class: arm.large
    steps:
      - docker-build:
          platform: linux/arm64
          tag: arm64
  
  # TODO MacOS M1 will be available on free plan after 24 Jun 2024
#  build-macos-m1:
#    macos:
#      xcode: 15.3.0
#    resource_class: macos.m1.medium.gen1
#    steps:
#      - docker-build:
#          platform: linux/arm64
#          tag: arm64

  # Test deploy process for local registry
  # TODO:docker manifest push works for DockerHub, but fails for local registry.
  # So we have to disable this step.
  deploy-local-registry:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker
      - run:
          name: Create local Docker registry
          command: docker run -d -p 5000:5000 --restart=always --name registry registry:2.8
      - docker-build-push-multiplatform:
          full-name: localhost:5000/flint:multiplatform

  deploy-main:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker
      - docker-deploy:
          tag: main

  deploy-tag:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker
      - docker-deploy:
          tag: ${CIRCLE_TAG}

# Workflows to be executed
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build-deploy:
    jobs:

      - build-linux-amd64:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/

      - build-linux-arm64:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/

      - deploy-main:
          filters:
            branches:
              only: docker-main
          requires:
            - build-linux-amd64
            - build-linux-arm64

      - deploy-tag:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/ # only release tags, e.g 2.7.0
            # See https://discuss.circleci.com/t/tag-not-triggered-by-circleci-not-filter-in-workflow/32036
            branches:
              ignore: /.*/ # Ignore all branches, otherwise the job is triggered by any git push
          # NB: you have to specify tags filter for all dependencies,
          # See https://circleci.com/docs/configuration-reference/#tags
          requires:
            - build-linux-amd64
            - build-linux-arm64